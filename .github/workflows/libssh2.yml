name: libssh2 Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfssl:
    name: Build wolfSSL
    # Just to keep it the same as the testing target
    if: github.repository_owner == 'wolfssl'
    runs-on: ubuntu-24.04
    # This should be a safe limit for the tests to run.
    timeout-minutes: 4
    steps:
      - name: Build wolfSSL
        uses: wolfSSL/actions-build-autotools-project@v1
        with:
          path: wolfssl
          configure: --enable-all
          check: false # config is already tested in many other PRB's
          install: true

      - name: tar build-dir
        run: tar -zcf build-dir.tgz build-dir

      - name: Upload built lib
        uses: actions/upload-artifact@v4
        with:
          name: wolf-install-libssh2
          path: build-dir.tgz
          retention-days: 5

  libssh2_check:
    strategy:
      fail-fast: false
      matrix:
        # List of releases to test
        ref: [ 1.11.1 ]
    name: ${{ matrix.ref }}
    if: github.repository_owner == 'wolfssl'
    runs-on: ubuntu-24.04
    # This should be a safe limit for the tests to run.
    timeout-minutes: 8
    needs: build_wolfssl
    steps:
      - name: Download lib
        uses: actions/download-artifact@v4
        with:
          name: wolf-install-libssh2

      - name: untar build-dir
        run: tar -xf build-dir.tgz

      - name: Build and test libssh2
        uses: wolfSSL/actions-build-autotools-project@v1
        with:
          repository: libssh2/libssh2
          ref: libssh2-${{ matrix.ref }}
          path: libssh2
          configure: --with-crypto=wolfssl --with-libwolfssl-prefix=$GITHUB_WORKSPACE/build-dir
          check: true

      - name: Confirm libssh2 built with wolfSSL
        run: ldd libssh2/src/.libs/libssh2.so | grep wolfssl

      - name: print server logs
        if: ${{ failure() }}
        run: tail -n +1 libssh2/tests/*.log
